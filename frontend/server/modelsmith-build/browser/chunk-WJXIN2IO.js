import{D as o,O as s,R as c,i as n}from"./chunk-XZNUB5IR.js";var l=function(i){return i.RUN_RECORDS_SUMMARIZED_DATA="runRecordsSummarizedData",i}(l||{}),u=[{key:l.RUN_RECORDS_SUMMARIZED_DATA,urlPattern:"/rest/run-records-summarized-data/[^/]+/[^/]+",track:!0,useRegex:!0}],d=(()=>{let t=class t{constructor(){this.loadingMap=new Map}setLoading(r,e){this.loadingMap.has(e)||this.loadingMap.set(e,new n(!1)),this.loadingMap.get(e).next(r)}getLoadingObservableForKey(r){if(this.loadingMap.has(r))return this.loadingMap.get(r).asObservable();{let e=new n(!1);return this.loadingMap.set(r,e),e.asObservable()}}};t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=s({token:t,factory:t.\u0275fac,providedIn:"root"});let i=t;return i})(),h=(()=>{let t=class t{constructor(r){this.loadingService=r}intercept(r,e){let a=this.getMatchingConfig(r);return a&&a.track&&this.loadingService.setLoading(!0,a.key),e.handle(r).pipe(o(()=>{a&&a.track&&this.loadingService.setLoading(!1,a.key)}))}getMatchingConfig(r){let e=r.url.split("?")[0];return u.find(a=>a.track&&(a.useRegex?new RegExp(a.urlPattern).test(e):a.urlPattern===e))}};t.\u0275fac=function(e){return new(e||t)(c(d))},t.\u0275prov=s({token:t,factory:t.\u0275fac});let i=t;return i})();export{l as a,d as b,h as c};
