import{a as I,b}from"./chunk-QLISP475.js";import{d as T,f as e}from"./chunk-LRK34XDC.js";import{a as w}from"./chunk-QJ55TOIV.js";import{$a as _,Ab as y,ab as u,bb as h,fb as M,ga as f,ib as g,oa as o,p as d,pa as l,sb as a,tb as v}from"./chunk-DL2LTWBU.js";var t,P=(t=class{},t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=f({type:t,selectors:[["ms-terminal-xterm-with-toolbar"]],standalone:!0,features:[y],decls:8,vars:0,consts:[["terminal",""],[1,"ms-terminal-wrapper"],[1,"top-terminal-section"],[1,"heading-section-title","mb-1","flex","items-center"],[3,"clearTerminal","scrollToTopTerminal","scrollToBottomTerminal","searchTerminal","disposeSearch"]],template:function(i,c){if(i&1){let m=M();_(0,"div",1)(1,"div",2)(2,"div",3),v(3,"Terminal"),u(),_(4,"div")(5,"ms-terminal-toolbar",4),g("clearTerminal",function(){o(m);let r=a(7);return l(r.clearTerminal())})("scrollToTopTerminal",function(){o(m);let r=a(7);return l(r.scrollToTop())})("scrollToBottomTerminal",function(){o(m);let r=a(7);return l(r.scrollToBottom())})("searchTerminal",function(r){o(m);let k=a(7);return l(k.search(r))})("disposeSearch",function(){o(m);let r=a(7);return l(r.clearSearch())}),u()()(),h(6,"ms-terminal-xterm",null,0),u()}},dependencies:[b,I],styles:[`.ms-terminal-wrapper{overflow-x:auto}.ms-terminal-wrapper .terminal-wrapper{border:10px solid var(--terminal-color);background-color:var(--terminal-color);border-radius:10px}.ms-terminal-wrapper .top-terminal-section{display:flex;justify-content:space-between}
`],encapsulation:2}),t);P=d([w()],P);var S=[{key:e.IPG,value:"GraSP pruning"},{key:e.IPM,value:"Magnitude-based init pruning"},{key:e.IPR,value:"Random init pruning"},{key:e.IMP,value:"Iterative Magnitude Pruning"},{key:e.OMP,value:"One-shot Magnitude Pruning"},{key:e.IPS,value:"Init Pruning Snip"},{key:e.IPSY,value:"Init Pruning Synflow"},{key:e.IPMB,value:"Init Pruning Magnitude Both"}],x=[{key:T.BPTQ,value:"Basic PTQ"},{key:T.BRECQ,value:"Brec-q"},{key:T.MINMAXPTQ,value:"Minmax-ptq"}],A=[...S,...x],R=e.IMP,G=s=>A.filter(n=>s.includes(n.key)).map(n=>n.value),W=s=>{let n=S.find(c=>c.value===s);if(n)return n.key;let i=x.find(c=>c.value===s);return i?i.key:null};export{P as a,S as b,x as c,R as d,G as e,W as f};
