import{Ae as R,Ce as E,G as z,Hc as s,Ic as w,M as C,S as b,Tc as p,Uc as j,Wc as u,Xc as y,Yc as D,Zc as A,_ as l,_c as M,a as n,b as c,ca as d,k as x,s as F,x as v}from"./chunk-I5FNXPEQ.js";var a=w({source:"[Run Records -> Records]",events:{"Get Run Records Filenames":s(),"Get Run Records Filenames Success":s(),"Get Run Records Filenames Failure":s(),"Get Run Record Summarized Data":s(),"Get Run Record Summarized Data Success":s(),"Get Run Record Summarized Data Failure":s()}});var G=j("runRecords");var I=p(G,r=>r.records),H=p(I,r=>r.filenames),J=p(I,r=>r.summarizedRecord);var f=class extends R{constructor(e){super(`run-records-filenames/${e}`,void 0,void 0,!1)}};var g=class extends R{constructor(e,T){super(`run-records-summarized-data/${e}/${T}`,void 0,void 0,!1)}};var se=(()=>{let e=class e{constructor(o,t){this.apiClient=o,this.actions$=t,this.getRunRecordsFilenames$=D(()=>this.actions$.pipe(M(a.getRunRecordsFilenames),b(i=>{let{algorithmType:h}=i;return this.apiClient.serviceCall(new f(h)).pipe(v(m=>a.getRunRecordsFilenamesSuccess({files:m})),z(m=>F(a.getRunRecordsFilenamesFailure({error:m}))))}))),this.getRunRecordSummarizedData$=D(()=>this.actions$.pipe(M(a.getRunRecordSummarizedData),b(i=>{let{algorithmType:h,filename:m}=i;return this.apiClient.serviceCall(new g(h,m)).pipe(v(S=>a.getRunRecordSummarizedDataSuccess({record:S})),z(S=>F(a.getRunRecordSummarizedDataFailure({error:S}))))})))}};e.\u0275fac=function(t){return new(t||e)(d(E),d(A))},e.\u0275prov=l({token:e,factory:e.\u0275fac});let r=e;return r})();var k={filenames:[],summarizedRecord:{},error:""},me=y(k,u(a.getRunRecordsFilenamesSuccess,(r,{files:e})=>c(n({},r),{filenames:e,error:null})),u(a.getRunRecordsFilenamesFailure,(r,{error:e})=>c(n({},r),{error:e})),u(a.getRunRecordSummarizedData,r=>c(n({},r),{loading:!0,error:null})),u(a.getRunRecordSummarizedDataSuccess,(r,{record:e})=>c(n({},r),{summarizedRecord:e,error:null})),u(a.getRunRecordSummarizedDataFailure,(r,{error:e})=>c(n({},r),{error:e})));var O=function(r){return r.RUN_RECORDS_SUMMARIZED_DATA="runRecordsSummarizedData",r}(O||{}),U=[{key:O.RUN_RECORDS_SUMMARIZED_DATA,urlPattern:"/rest/run-records-summarized-data/[^/]+/[^/]+",track:!0,useRegex:!0}],L=(()=>{let e=class e{constructor(){this.loadingMap=new Map}setLoading(o,t){this.loadingMap.has(t)||this.loadingMap.set(t,new x(!1)),this.loadingMap.get(t).next(o)}getLoadingObservableForKey(o){if(this.loadingMap.has(o))return this.loadingMap.get(o).asObservable();{let t=new x(!1);return this.loadingMap.set(o,t),t.asObservable()}}};e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=l({token:e,factory:e.\u0275fac,providedIn:"root"});let r=e;return r})(),Fe=(()=>{let e=class e{constructor(o){this.loadingService=o}intercept(o,t){let i=this.getMatchingConfig(o);return i&&i.track&&this.loadingService.setLoading(!0,i.key),t.handle(o).pipe(C(()=>{i&&i.track&&this.loadingService.setLoading(!1,i.key)}))}getMatchingConfig(o){let t=o.url.split("?")[0];return U.find(i=>i.track&&(i.useRegex?new RegExp(i.urlPattern).test(t):i.urlPattern===t))}};e.\u0275fac=function(t){return new(t||e)(d(L))},e.\u0275prov=l({token:e,factory:e.\u0275fac});let r=e;return r})();export{a,se as b,me as c,H as d,J as e,O as f,L as g,Fe as h};
